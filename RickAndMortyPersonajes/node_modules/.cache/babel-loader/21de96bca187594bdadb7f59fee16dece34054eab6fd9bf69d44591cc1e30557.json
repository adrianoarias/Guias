{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Rick and Morty Characters\", -1 /* HOISTED */)), $data.characters.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" Loading characters... \")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.characters, character => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: character.id,\n      class: \"character-card\"\n    }, [_createElementVNode(\"img\", {\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"p\", null, _toDisplayString(character.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","characters","length","_hoisted_1","_createCommentVNode","_Fragment","_renderList","character","id","class","src","image","alt","name","_hoisted_2","_toDisplayString"],"sources":["C:\\FWA\\proyectorickymorty\\src\\components\\CharacterList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Rick and Morty Characters</h1>\r\n    <div v-if=\"characters.length == 0\">\r\n      Loading characters...\r\n    </div>\r\n    <div v-for=\"character in characters\" :key=\"character.id\" class=\"character-card\">\r\n      <img :src=\"character.image\" :alt=\"character.name\" />\r\n      <p>{{ character.name }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      characters: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchCharacters();\r\n  },\r\n  methods: {\r\n    async fetchCharacters() {\r\n      try {\r\n        const response = await axios.get('https://rickandmortyapi.com/api/character');\r\n        this.characters = response.data.results;\r\n      } catch (error) {\r\n        console.error('Error fetching characters:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.character-card {\r\n  display: inline-block;\r\n  margin: 10px;\r\n  text-align: center;\r\n}\r\nimg {\r\n  width: 150px;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CASM,c,0BARJC,mBAAA,CAAkC,YAA9B,2BAAyB,sBAClBC,KAAA,CAAAC,UAAU,CAACC,MAAM,S,cAA5BJ,mBAAA,CAEM,OALVK,UAAA,EAGuC,yBAEnC,KALJC,mBAAA,iB,kBAMIN,mBAAA,CAGMO,SAAA,QATVC,WAAA,CAM6BN,KAAA,CAAAC,UAAU,EAAvBM,SAAS;yBAArBT,mBAAA,CAGM;MAHgCD,GAAG,EAAEU,SAAS,CAACC,EAAE;MAAEC,KAAK,EAAC;QAC7DV,mBAAA,CAAoD;MAA9CW,GAAG,EAAEH,SAAS,CAACI,KAAK;MAAGC,GAAG,EAAEL,SAAS,CAACM;4BAPlDC,UAAA,GAQMf,mBAAA,CAA2B,WAAAgB,gBAAA,CAArBR,SAAS,CAACM,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}